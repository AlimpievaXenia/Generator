import { get } from 'dot-prop';
import compile from './compile';

export default function createTranslate(translation) {
  var helpers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var cache = {};
  var compiled = compile(translation, helpers);

  return function (key) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (cache[key] != null && args.length === 0) {
      return cache[key];
    }

    if (cache[key] == null) {
      cache[key] = get(compiled, key);
    }

    var translate = cache[key];

    if (typeof translate !== 'function') {
      return key;
    }

    var translated = translate(args);

    if (args.length === 0) {
      cache[key] = translated;
    }

    return translated;
  };
}